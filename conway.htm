<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Piccolo Theme</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- CSS
================================================== -->
<link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="css/bootstrap.css">
<link rel="stylesheet" href="css/bootstrap-responsive.css">
<link rel="stylesheet" href="css/prettyPhoto.css" />
<link rel="stylesheet" href="css/custom-styles.css">

<!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <link rel="stylesheet" href="css/style-ie.css"/>
<![endif]--> 

<!-- Favicons
================================================== -->
<link rel="shortcut icon" href="img/favicon.ico">
<link rel="apple-touch-icon" href="img/apple-touch-icon.png">
<link rel="apple-touch-icon" sizes="72x72" href="img/apple-touch-icon-72x72.png">
<link rel="apple-touch-icon" sizes="114x114" href="img/apple-touch-icon-114x114.png">

<!-- JS
================================================== -->
<script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
<script src="js/jquery.easing.1.3.js"></script>
<script src="js/bootstrap.js"></script>
<script src="js/jquery.prettyPhoto.js"></script>
<script src="js/jquery.quicksand.js"></script>
<script src="js/jquery.custom.js"></script>

</head>

<body>
	<div class="color-bar-1"></div>
    <div class="color-bar-2 color-bg"></div>
    
    <div class="container main-container">
    
      <div class="row header"><!-- Begin Header -->
      
        <!-- Logo
        ================================================== -->
        <div class="span9 logo" id="top">
        	<a href="index.htm"><h1>FROSTED GLASS</h1></a>
            <h5>from the sandbox of deb tripathi  [data, algorithms, pencil and camera works]</h5>
        </div>

       
        <!-- Main Navigation
        ================================================== -->
        <div class="span3 navigation">
            <div class="navbar">
            
            <ul class="nav">
           <li class="active"><a href="index.htm#top">Home</a></li>
            <li><a href="#footer">About Deb</a></li>
            </ul>
           
            </div>


            
        </div>

      </div><!-- End Header -->
   
    <!-- Page Content
    ================================================== --> 


    <div class="row">
   <div class="span3" id="wowdesc1">
        <span class="project-details"><h5>
          Conway's program of life </h5>is perhaps one of the most influential (and simple) algorithms of today. From economic to social theories, it has impacted many different walks of life. It's a classic zero player game where the evolution is determined by it's initial state, requiring no further input.
        <br>
        The rules of the game are as follows:
        <ul>
          <li>A live cell with fewer than two neighbors dies > Under population </li>
          <li>A live cell with two or three live neighbors lives  </li>
          <li>A live or dead cell with more than 3 neighbors dies > Overcrowding  </li>
          <li>A dead cell with exactly 3 live neighbors comes alive > Reproduction   </li> 

        </ul>
    </div>
        <div class="span6" id="wow2">
 

    <div class="btn-group" id="Buttgrp" align="float" style="z-index:10">
      <button type="button" class="btn btn-primary" id="Reset" >Reset</button>
      <button type="button" class="btn btn-primary" id="Start" >Start</button>
      <button type="button" class="btn btn-primary" id="Stop" >Stop</button>
    </div> 
    <div id="stats">
          <span id="caption"><h5>Rollver cells to set initial state.Click Start to run simulation.</h5></span>
    </div>


    <div id="chart" ></div>
</div>


    </div><!-- End container row -->
    
    </div> <!-- End Container -->

    <!-- Footer Area
        ================================================== -->
	<div class="footer-container" id="footer"><!-- Begin Footer -->
    	<div class="container">
        	<div class="row footer-row">
                <div class="span3 footer-col">
                    <h3>Hello, Nice to meet you!</h3>
                   <img src="img/pic.png" class="img-circle" alt="Deb Tripathi" /><br>
                                       <ul class="social-icons">
                        <li><a href="https://www.facebook.com/deb.tripathi" class="social-icon facebook"></a></li>
                      <li><a href="https://frostedglass.wordpress.com/" class="social-icon rss"></a></li>
                        <li><a href="#" class="social-icon forrst"></a></li>
                    </ul>
               </div>
                   <div class="span9 footer-col">
                                    <h6><p class="blog-summary">Browse around, enjoy the site and let me know if you hated it, liked it, or even loved it! I love doing visualizations, taking pictures and sketching potraits when I get time from other things that don't pay me enough and take all my time away. It's a chicken and egg story that I can certainly explain once I get a little time from some of it, which is highly improbable given the chicken and egg situation. But if you have a good idea that will potentially make millions of dollars and change the world forever, which needs skills like mine, please ping.</h6><br>
                                    <h5>Deb Tripathi<br/>
                                    Head of Ideas, Braindead Inc</h5></p>
                      </div>
                </div>
            </div>

            <div class="row"><!-- Begin Sub Footer -->
                <div class="footer-col footer-sub">
                    <div class="row no-margin">
                        <div class="span6"><span class="centre">Copyright 2012 Piccolo Theme. All rights reserved.</span></div>
                    </div>
                </div>
            </div><!-- End Sub Footer -->

        </div>
    </div><!-- End Footer -->

    <!-- Scroll to Top -->  
    <div id="toTop" class="hidden-phone hidden-tablet">Back to Top</div>

    <script type="text/javascript" src="http://d3js.org/d3.v3.js"></script>
    <script type="text/javascript" src="http://d3js.org/d3.hexbin.v0.min.js"></script>  
    <script type="text/javascript">

var counter = 0;

//The color of each hexagon
var color = d3.scale.category10();
var myVar= null;

///////////////////////////////////////////////////////////////////////////
////////////// Initiate SVG and create hexagon centers ////////////////////
///////////////////////////////////////////////////////////////////////////

//Function to call when you mouseover a node
function mover(d) {
    var el = d3.select(this)
    .transition()
    .duration(10)     
    .style("fill-opacity", 0.3)
        .style("fill", function (i) {
        return color(i);
      })
      ;
}

//Mouseout function
function mout(d) { 
  var el = d3.select(this)
     .transition()
     .duration(1000)
     .style("fill-opacity", 1)
     ;
};

//svg sizes and margins
var margin = {
    top: 10,
    right: 10,
    bottom: 10,
    left: 0
};

//The next lines should be run, but this seems to go wrong on the first load in bl.ocks.org
//var width = $(window).width() - margin.left - margin.right - 40;
//var height = $(window).height() - margin.top - margin.bottom - 80;
//So I set it fixed to
var width = 700;
var height = 700;

//The number of columns and rows of the heatmap
var MapColumns = 50,
  MapRows = 30;

var noOfHex = MapColumns * MapRows;
  
//The maximum radius the hexagons can have to still fit the screen
var hexRadius = d3.min([width/((MapColumns + 0.5) * Math.sqrt(3)),
      height/((MapRows + 1/3) * 1.5)]);

//Set the new height and width of the SVG based on the max possible
width = MapColumns*hexRadius*Math.sqrt(3);
height = MapRows*1.5*hexRadius+0.5*hexRadius;

//Set the hexagon radius
var hexbin = d3.hexbin()
             .radius(hexRadius);

//Calculate the center positions of each hexagon  
var points = [];
//var rowcol = [];
for (var i = 0; i < MapRows; i++) {
    for (var j = 0; j < MapColumns; j++) {
        points.push([hexRadius * j * 1.75, hexRadius * i * 1.5]);
  //rowcol.push([i,j]);
    }//for j
}//for i

//Create SVG element
var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

///////////////////////////////////////////////////////////////////////////
////////////////////// Draw hexagons and color them ///////////////////////
///////////////////////////////////////////////////////////////////////////

//Start drawing the hexagons
svg.append("g")
    .selectAll(".hexagon")
    .data(hexbin(points))
    .enter().append("path")
    .attr("class", "hexagon")
    .attr("d", function (d) {
    return "M" + d.x + "," + d.y + hexbin.hexagon();
  })
    .attr("id", function (d,i) {
    return i;

  })
    .attr("stroke", function (d,i) {
    return "#ddd";
  })
    .attr("stroke-width", "1px")
    .style("fill","#ffffff")
//    .style("fill", function (d,i) {
//    return color(i);
//  })
  .on("mouseover", mover)
  .on("mouseout", mout)
  ;



// Button clicks
  jQuery(function($) {

    
    
    $('#Reset').on('click', function (event) {
    
      d3.selectAll("path")
      .transition()
      .duration(500)
      .style("fill", "#ffffff");
    
    });

    $('#Stop').on('click', function (event) {
    
    window.clearInterval(myVar);
  


    });

    $('#Start').on('click', function (event) {

      var caption = "<h5>Starting simulation..." ;
      d3.select("#caption").html(caption);  
      window.clearInterval(myVar);
      myVar = window.setInterval(hexLivesOrDies, 6000);

      //hexLivesOrDies();

  
    });
    
    function hexLivesOrDies(){

      counter++;

        

      var Dies = [];
      var Lives = [];
      var colors = {};
      console.log(Math.floor(Date.now() / 1000));

      for (k=0; k < noOfHex; k++) { 
          
        colors[k] = d3.select('path[id="'+k+'"]').style("fill");

      }     
      console.log(Math.floor(Date.now() / 1000));
      

      for (i=0; i < noOfHex; i++) { 

      //Find sequence numbers of the neighbors
      var neighbors = [(i-MapColumns), (i-MapColumns+1), (i-1), (i+1), (i+MapColumns), (i+MapColumns+1)];
      var deadneighbors = 0;

      // Get the colors of the neighboring hexagons
      for (j = 0; j < neighbors.length; j++)
        {

          if (neighbors[j] >= 0 && (neighbors[j] < (noOfHex -1)))
          { 
          
            // Count the number of dead neighbors
            if (colors[neighbors[j]] == "#ffffff"){deadneighbors ++;}

          }
        } // end for j
    
      if (deadneighbors < 2 || deadneighbors > 3){ Dies.push(i);} // Hex dies through underpopulation or overcrowding
      else if (deadneighbors == 3){ Lives.push(i);} // Lives or Reproduces
      else if (deadneighbors == 2 && !(colors[i] == "#ffffff")) { Lives.push(i);} // Lives 
      else { Dies.push(i);} // Hex Dies 

      } // end for i
      console.log(Math.floor(Date.now() / 1000));
      

      for (iD = 0; iD < Dies.length; iD++) 
      {

        
          d3.select('[id="'+Dies[iD]+'"]')
              .transition()
              .duration(2000)
          .style("fill","#ffffff"); 


      } // end for iD
      for (iL = 0; iL < Lives.length; iL++) 
      {

          d3.select('[id="'+Lives[iL]+'"]')
              .transition()
              .duration(2000)
          .style("fill",color(Lives[iL]));  
          

      }// end for iL
      
      var perc = (Lives.length/noOfHex)*100;

      var caption = "<h5><b>" + perc.toFixed(2) + "</b>% alive in <b>"+ counter + " </b> ticks";

      d3.select("#caption").html(caption);    
      console.log(Math.floor(Date.now() / 1000));




    }
  });


</script>


    
</body>
</html>
